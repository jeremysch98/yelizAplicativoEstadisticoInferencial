/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;


/**
 *
 * @author JEREMY
 */
public class Tabla extends javax.swing.JFrame {

    /**
     * Creates new form Tabla
     */
    public Tabla() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbChiCuadrado = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbChiCuadrado2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("TABLA DISTRIBUCIÃ“N CHI-CUADRADO");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(406, 406, 406)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbChiCuadrado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1),  new Double(10.828),  new Double(9.1404),  new Double(7.879),  new Double(6.635),  new Double(5.024),  new Double(3.841),  new Double(2.706),  new Double(2.072),  new Double(1.642),  new Double(1.323),  new Double(1.047),  new Double(0.8735),  new Double(0.708),  new Double(0.571),  new Double(0.357),  new Double(0.275),  new Double(0.206),  new Double(0.148)},
                { new Integer(2),  new Double(13.816),  new Double(11.983),  new Double(10.597),  new Double(9.21),  new Double(7.378),  new Double(5.991),  new Double(4.605),  new Double(3.794),  new Double(3.219),  new Double(2.7726),  new Double(2.408),  new Double(2.099),  new Double(1.833),  new Double(1.597),  new Double(1.196),  new Double(1.022),  new Double(0.862),  new Double(0.713)},
                { new Integer(3),  new Double(16.266),  new Double(14.32),  new Double(12.838),  new Double(11.345),  new Double(9.348),  new Double(7.815),  new Double(6.251),  new Double(5.317),  new Double(4.642),  new Double(4.1083),  new Double(3.665),  new Double(3.2831),  new Double(2.946),  new Double(2.643),  new Double(2.109),  new Double(1.869),  new Double(1.642),  new Double(1.424)},
                { new Integer(4),  new Double(18.467),  new Double(16.424),  new Double(14.86),  new Double(13.277),  new Double(11.143),  new Double(9.488),  new Double(7.779),  new Double(6.7445),  new Double(5.989),  new Double(5.3853),  new Double(4.878),  new Double(4.438),  new Double(4.045),  new Double(3.687),  new Double(3.047),  new Double(2.753),  new Double(2.47),  new Double(2.195)},
                { new Integer(5),  new Double(20.515),  new Double(18.385),  new Double(16.75),  new Double(15.086),  new Double(12.833),  new Double(11.07),  new Double(9.236),  new Double(8.115),  new Double(7.289),  new Double(6.6257),  new Double(6.064),  new Double(5.573),  new Double(5.132),  new Double(4.728),  new Double(3.996),  new Double(3.655),  new Double(3.325),  new Double(3.0)},
                { new Integer(6),  new Double(22.458),  new Double(20.249),  new Double(18.548),  new Double(16.812),  new Double(14.449),  new Double(12.592),  new Double(10.645),  new Double(9.446),  new Double(8.558),  new Double(7.8408),  new Double(7.231),  new Double(6.695),  new Double(6.211),  new Double(5.765),  new Double(4.952),  new Double(4.57),  new Double(4.197),  new Double(3.828)},
                { new Integer(7),  new Double(24.322),  new Double(22.04),  new Double(20.278),  new Double(18.475),  new Double(16.013),  new Double(14.067),  new Double(12.017),  new Double(10.748),  new Double(9.803),  new Double(9.037),  new Double(8.383),  new Double(7.806),  new Double(7.283),  new Double(6.8),  new Double(5.913),  new Double(5.493),  new Double(5.081),  new Double(4.671)},
                { new Integer(8),  new Double(26.124),  new Double(23.774),  new Double(21.955),  new Double(20.09),  new Double(17.535),  new Double(15.507),  new Double(13.362),  new Double(12.027),  new Double(11.03),  new Double(10.2189),  new Double(9.524),  new Double(8.909),  new Double(8.351),  new Double(7.833),  new Double(6.877),  new Double(6.423),  new Double(5.975),  new Double(5.527)},
                { new Integer(9),  new Double(27.877),  new Double(25.462),  new Double(23.589),  new Double(21.666),  new Double(19.023),  new Double(16.919),  new Double(14.684),  new Double(13.288),  new Double(12.242),  new Double(11.3887),  new Double(10.656),  new Double(10.006),  new Double(9.414),  new Double(8.863),  new Double(7.843),  new Double(7.357),  new Double(6.876),  new Double(6.393)},
                { new Integer(10),  new Double(29.588),  new Double(27.112),  new Double(25.188),  new Double(23.209),  new Double(20.483),  new Double(18.307),  new Double(15.987),  new Double(14.534),  new Double(13.442),  new Double(12.5489),  new Double(11.781),  new Double(11.097),  new Double(10.473),  new Double(9.892),  new Double(8.812),  new Double(8.295),  new Double(7.783),  new Double(7.267)},
                { new Integer(11),  new Double(31.264),  new Double(28.7291),  new Double(26.757),  new Double(24.725),  new Double(21.92),  new Double(19.675),  new Double(17.275),  new Double(15.767),  new Double(14.631),  new Double(13.7007),  new Double(12.899),  new Double(12.184),  new Double(11.53),  new Double(10.919),  new Double(9.783),  new Double(9.237),  new Double(8.695),  new Double(8.148)},
                { new Integer(12),  new Double(32.909),  new Double(30.318),  new Double(28.3),  new Double(26.217),  new Double(23.337),  new Double(21.029),  new Double(18.549),  new Double(16.989),  new Double(15.812),  new Double(14.8454),  new Double(14.011),  new Double(13.266),  new Double(12.584),  new Double(11.946),  new Double(10.755),  new Double(10.182),  new Double(9.612),  new Double(9.034)},
                { new Integer(13),  new Double(34.528),  new Double(31.883),  new Double(29.819),  new Double(27.688),  new Double(24.736),  new Double(22.362),  new Double(19.812),  new Double(18.202),  new Double(16.985),  new Double(15.9839),  new Double(15.119),  new Double(14.345),  new Double(13.636),  new Double(12.9717),  new Double(11.728),  new Double(11.129),  new Double(10.532),  new Double(9.926)},
                { new Integer(14),  new Double(36.123),  new Double(33.426),  new Double(31.319),  new Double(29.141),  new Double(26.119),  new Double(23.685),  new Double(21.064),  new Double(19.406),  new Double(18.151),  new Double(17.1169),  new Double(16.222),  new Double(15.421),  new Double(14.685),  new Double(13.996),  new Double(12.703),  new Double(12.078),  new Double(11.455),  new Double(10.821)},
                { new Integer(15),  new Double(37.697),  new Double(34.949),  new Double(32.801),  new Double(30.578),  new Double(27.488),  new Double(24.996),  new Double(22.307),  new Double(20.603),  new Double(19.311),  new Double(18.2451),  new Double(17.322),  new Double(16.494),  new Double(15.733),  new Double(15.019),  new Double(13.679),  new Double(13.03),  new Double(12.381),  new Double(11.721)},
                { new Integer(16),  new Double(39.252),  new Double(36.446),  new Double(34.267),  new Double(32.0),  new Double(28.845),  new Double(26.296),  new Double(23.542),  new Double(21.793),  new Double(20.465),  new Double(19.3689),  new Double(18.418),  new Double(17.565),  new Double(16.78),  new Double(16.043),  new Double(14.656),  new Double(13.983),  new Double(13.309),  new Double(12.624)},
                { new Integer(17),  new Double(40.79),  new Double(37.946),  new Double(35.718),  new Double(33.409),  new Double(30.191),  new Double(27.587),  new Double(24.769),  new Double(22.997),  new Double(21.615),  new Double(20.4887),  new Double(19.511),  new Double(18.633),  new Double(17.824),  new Double(17.065),  new Double(15.633),  new Double(14.937),  new Double(14.241),  new Double(13.531)},
                { new Integer(18),  new Double(42.312),  new Double(39.422),  new Double(37.156),  new Double(34.805),  new Double(31.529),  new Double(28.869),  new Double(25.989),  new Double(24.156),  new Double(22.76),  new Double(21.6049),  new Double(20.601),  new Double(19.699),  new Double(18.868),  new Double(18.086),  new Double(16.611),  new Double(15.893),  new Double(15.174),  new Double(14.44)},
                { new Integer(19),  new Double(43.82),  new Double(40.885),  new Double(38.582),  new Double(36.191),  new Double(32.852),  new Double(30.144),  new Double(27.204),  new Double(25.329),  new Double(23.9),  new Double(22.7178),  new Double(21.689),  new Double(20.7638),  new Double(19.91),  new Double(19.107),  new Double(17.589),  new Double(16.85),  new Double(16.108),  new Double(15.352)},
                { new Integer(20),  new Double(45.315),  new Double(42.336),  new Double(39.997),  new Double(37.566),  new Double(34.17),  new Double(31.41),  new Double(28.412),  new Double(26.498),  new Double(25.038),  new Double(23.8277),  new Double(22.775),  new Double(21.827),  new Double(20.951),  new Double(20.127),  new Double(18.569),  new Double(17.809),  new Double(17.046),  new Double(16.266)},
                { new Integer(21),  new Double(46.797),  new Double(43.775),  new Double(41.401),  new Double(38.932),  new Double(35.479),  new Double(32.671),  new Double(29.615),  new Double(27.662),  new Double(26.171),  new Double(24.9348),  new Double(23.858),  new Double(22.888),  new Double(21.991),  new Double(21.147),  new Double(19.549),  new Double(18.768),  new Double(17.984),  new Double(17.182)},
                { new Integer(22),  new Double(48.268),  new Double(45.204),  new Double(42.796),  new Double(40.289),  new Double(36.781),  new Double(33.924),  new Double(30.813),  new Double(28.822),  new Double(27.301),  new Double(26.039),  new Double(24.939),  new Double(23.947),  new Double(23.031),  new Double(22.166),  new Double(20.529),  new Double(19.729),  new Double(18.924),  new Double(18.101)},
                { new Integer(23),  new Double(49.728),  new Double(46.623),  new Double(44.181),  new Double(41.638),  new Double(38.076),  new Double(35.172),  new Double(32.007),  new Double(29.979),  new Double(28.429),  new Double(27.1413),  new Double(29.018),  new Double(25.006),  new Double(24.069),  new Double(23.185),  new Double(21.509),  new Double(20.69),  new Double(19.866),  new Double(19.021)},
                { new Integer(24),  new Double(51.179),  new Double(48.034),  new Double(45.559),  new Double(42.98),  new Double(39.364),  new Double(36.415),  new Double(33.196),  new Double(31.133),  new Double(29.553),  new Double(28.2412),  new Double(27.096),  new Double(26.063),  new Double(25.106),  new Double(24.204),  new Double(22.491),  new Double(21.652),  new Double(20.808),  new Double(19.943)},
                { new Integer(25),  new Double(52.62),  new Double(49.435),  new Double(46.928),  new Double(44.314),  new Double(40.646),  new Double(37.652),  new Double(34.382),  new Double(32.283),  new Double(30.675),  new Double(29.3388),  new Double(28.172),  new Double(27.118),  new Double(26.143),  new Double(25.222),  new Double(23.472),  new Double(22.616),  new Double(21.752),  new Double(20.867)},
                { new Integer(26),  new Double(54.052),  new Double(50.829),  new Double(48.29),  new Double(45.642),  new Double(41.923),  new Double(38.885),  new Double(35.563),  new Double(33.4295),  new Double(31.795),  new Double(30.4346),  new Double(29.246),  new Double(28.173),  new Double(27.179),  new Double(26.239),  new Double(24.454),  new Double(23.579),  new Double(22.698),  new Double(21.792)},
                { new Integer(27),  new Double(55.476),  new Double(52.215),  new Double(49.645),  new Double(46.963),  new Double(43.195),  new Double(40.133),  new Double(36.741),  new Double(34.5736),  new Double(32.912),  new Double(31.5284),  new Double(30.319),  new Double(29.227),  new Double(28.214),  new Double(27.257),  new Double(25.437),  new Double(24.544),  new Double(23.644),  new Double(22.719)},
                { new Integer(28),  new Double(59.892),  new Double(53.594),  new Double(50.993),  new Double(48.278),  new Double(44.461),  new Double(41.337),  new Double(37.916),  new Double(35.715),  new Double(34.027),  new Double(32.621),  new Double(31.391),  new Double(30.279),  new Double(29.249),  new Double(28.274),  new Double(26.419),  new Double(25.509),  new Double(24.591),  new Double(23.647)},
                { new Integer(29),  new Double(58.301),  new Double(54.966),  new Double(52.336),  new Double(49.588),  new Double(45.722),  new Double(42.557),  new Double(39.087),  new Double(36.854),  new Double(35.139),  new Double(33.711),  new Double(32.461),  new Double(31.331),  new Double(30.283),  new Double(29.291),  new Double(27.403),  new Double(26.475),  new Double(25.539),  new Double(24.577)},
                { new Integer(30),  new Double(59.703),  new Double(56.333),  new Double(53.672),  new Double(50.892),  new Double(46.979),  new Double(43.773),  new Double(40.256),  new Double(37.99),  new Double(36.25),  new Double(34.799),  new Double(33.53),  new Double(32.382),  new Double(31.316),  new Double(30.307),  new Double(28.386),  new Double(27.442),  new Double(26.488),  new Double(25.508)}
            },
            new String [] {
                "v", "0.001", "0.0025", "0.005", "0.01", "0.025", "0.05", "0.1", "0.15", "0.2", "0.25", "0.3", "0.35", "0.4", "0.45", "0.55", "0.6", "0.65", "0.7"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbChiCuadrado.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbChiCuadrado.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jScrollPane1.setViewportView(tbChiCuadrado);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Valores de la probabilidad: p");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tbChiCuadrado2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1),  new Double(0.102),  new Double(0.064),  new Double(0.035),  new Double(0.016),  new Double(0.004),  new Double(0.001),  new Double(0.0),  new Double(0.0),  new Double(0.0),  new Double(0.0)},
                { new Integer(2),  new Double(0.575),  new Double(0.446),  new Double(0.325),  new Double(0.211),  new Double(0.103),  new Double(0.051),  new Double(0.02),  new Double(0.01),  new Double(0.005),  new Double(0.002)},
                { new Integer(3),  new Double(1.213),  new Double(1.005),  new Double(0.797),  new Double(0.584),  new Double(0.352),  new Double(0.216),  new Double(0.115),  new Double(0.072),  new Double(0.044),  new Double(0.024)},
                { new Integer(4),  new Double(1.927),  new Double(1.649),  new Double(1.366),  new Double(1.064),  new Double(0.711),  new Double(0.484),  new Double(0.297),  new Double(0.207),  new Double(0.144),  new Double(0.091)},
                { new Integer(5),  new Double(2.675),  new Double(2.343),  new Double(1.993),  new Double(1.61),  new Double(1.145),  new Double(0.831),  new Double(0.554),  new Double(0.412),  new Double(0.307),  new Double(0.21)},
                { new Integer(6),  new Double(3.455),  new Double(3.07),  new Double(2.661),  new Double(2.204),  new Double(1.635),  new Double(1.237),  new Double(0.872),  new Double(0.676),  new Double(0.526),  new Double(0.381)},
                { new Integer(7),  new Double(4.255),  new Double(3.822),  new Double(3.358),  new Double(2.833),  new Double(2.167),  new Double(1.69),  new Double(1.239),  new Double(0.989),  new Double(0.794),  new Double(0.598)},
                { new Integer(8),  new Double(5.071),  new Double(4.594),  new Double(4.078),  new Double(3.49),  new Double(2.733),  new Double(2.18),  new Double(1.646),  new Double(1.344),  new Double(1.104),  new Double(0.857)},
                { new Integer(9),  new Double(5.898),  new Double(5.38),  new Double(4.816),  new Double(4.168),  new Double(3.325),  new Double(2.7),  new Double(2.088),  new Double(1.735),  new Double(1.45),  new Double(1.152)},
                { new Integer(10),  new Double(6.737),  new Double(6.179),  new Double(5.57),  new Double(4.865),  new Double(3.94),  new Double(3.247),  new Double(2.558),  new Double(2.156),  new Double(1.827),  new Double(1.479)},
                { new Integer(11),  new Double(7.584),  new Double(6.989),  new Double(6.336),  new Double(5.578),  new Double(4.575),  new Double(3.816),  new Double(3.053),  new Double(2.603),  new Double(2.232),  new Double(1.834)},
                { new Integer(12),  new Double(8.438),  new Double(7.807),  new Double(7.113),  new Double(6.304),  new Double(5.226),  new Double(4.404),  new Double(3.571),  new Double(3.074),  new Double(2.661),  new Double(2.214)},
                { new Integer(13),  new Double(9.299),  new Double(8.634),  new Double(7.9),  new Double(7.042),  new Double(5.892),  new Double(5.009),  new Double(4.107),  new Double(3.565),  new Double(3.111),  new Double(2.617)},
                { new Integer(14),  new Double(10.165),  new Double(9.467),  new Double(8.696),  new Double(7.79),  new Double(6.571),  new Double(5.629),  new Double(4.66),  new Double(4.075),  new Double(3.582),  new Double(3.041)},
                { new Integer(15),  new Double(11.036),  new Double(10.307),  new Double(9.499),  new Double(8.547),  new Double(7.261),  new Double(6.262),  new Double(5.229),  new Double(4.601),  new Double(4.069),  new Double(3.483)},
                { new Integer(16),  new Double(11.912),  new Double(11.152),  new Double(10.309),  new Double(9.312),  new Double(7.962),  new Double(6.908),  new Double(5.812),  new Double(5.142),  new Double(4.573),  new Double(3.942)},
                { new Integer(17),  new Double(12.791),  new Double(12.002),  new Double(11.124),  new Double(10.085),  new Double(8.672),  new Double(7.564),  new Double(6.408),  new Double(5.697),  new Double(5.091),  new Double(4.416)},
                { new Integer(18),  new Double(13.675),  new Double(12.857),  new Double(11.946),  new Double(10.865),  new Double(9.39),  new Double(8.231),  new Double(7.015),  new Double(6.265),  new Double(5.623),  new Double(4.905)},
                { new Integer(19),  new Double(14.562),  new Double(13.716),  new Double(12.772),  new Double(11.651),  new Double(10.117),  new Double(8.907),  new Double(7.633),  new Double(6.844),  new Double(6.167),  new Double(5.407)},
                { new Integer(20),  new Double(15.451),  new Double(14.578),  new Double(13.603),  new Double(12.443),  new Double(10.851),  new Double(9.591),  new Double(8.26),  new Double(7.434),  new Double(6.722),  new Double(5.921)},
                { new Integer(21),  new Double(16.344),  new Double(15.445),  new Double(14.439),  new Double(13.24),  new Double(11.591),  new Double(10.283),  new Double(8.897),  new Double(8.034),  new Double(7.288),  new Double(6.447)},
                { new Integer(22),  new Double(17.239),  new Double(16.314),  new Double(15.278),  new Double(14.041),  new Double(12.338),  new Double(10.982),  new Double(9.542),  new Double(8.643),  new Double(7.864),  new Double(6.983)},
                { new Integer(23),  new Double(18.137),  new Double(17.187),  new Double(16.121),  new Double(14.848),  new Double(13.091),  new Double(11.689),  new Double(10.196),  new Double(9.26),  new Double(8.45),  new Double(7.529)},
                { new Integer(24),  new Double(19.037),  new Double(18.062),  new Double(16.968),  new Double(15.659),  new Double(13.848),  new Double(12.401),  new Double(10.856),  new Double(9.886),  new Double(9.044),  new Double(8.085)},
                { new Integer(25),  new Double(19.939),  new Double(18.94),  new Double(17.818),  new Double(16.473),  new Double(14.611),  new Double(13.12),  new Double(11.524),  new Double(10.52),  new Double(9.646),  new Double(8.649)},
                { new Integer(26),  new Double(20.843),  new Double(19.82),  new Double(18.671),  new Double(17.292),  new Double(15.379),  new Double(13.844),  new Double(12.198),  new Double(11.16),  new Double(10.256),  new Double(9.222)},
                { new Integer(27),  new Double(21.749),  new Double(20.703),  new Double(19.527),  new Double(18.114),  new Double(16.151),  new Double(14.573),  new Double(12.879),  new Double(11.808),  new Double(10.8733),  new Double(9.803)},
                { new Integer(28),  new Double(22.657),  new Double(21.588),  new Double(20.385),  new Double(18.939),  new Double(16.928),  new Double(15.308),  new Double(13.565),  new Double(12.461),  new Double(11.497),  new Double(10.391)},
                { new Integer(29),  new Double(23.566),  new Double(22.475),  new Double(21.246),  new Double(19.768),  new Double(17.708),  new Double(16.047),  new Double(14.256),  new Double(13.121),  new Double(12.127),  new Double(10.986)},
                { new Integer(30),  new Double(24.477),  new Double(23.364),  new Double(22.11),  new Double(20.559),  new Double(18.493),  new Double(16.791),  new Double(14.953),  new Double(13.787),  new Double(12.765),  new Double(11.588)}
            },
            new String [] {
                "v", "0.75", "0.8", "0.85", "0.9", "0.95", "0.975", "0.99", "0.995", "0.9975", "0.999"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbChiCuadrado2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbChiCuadrado2.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jScrollPane2.setViewportView(tbChiCuadrado2);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Valores de la probabilidad: p");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1066, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1016, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tabla.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tabla().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbChiCuadrado;
    private javax.swing.JTable tbChiCuadrado2;
    // End of variables declaration//GEN-END:variables
}
